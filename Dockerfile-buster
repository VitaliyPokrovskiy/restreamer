ARG IMAGE=amd64/debian:buster-slim
#ARG IMAGE=amd64/debian:bullseye-slim

FROM $IMAGE as builder

# MAINTAINER datarhei <info@datarhei.org>

ARG NASM_VERSION=2.14.02
# ARG LAME_VERSION=3.100
ARG FFMPEG_VERSION=4.4.3
# ARG FFMPEG_VERSION=5.1.2
ARG NGINX_VERSION=1.22.1
ARG NGINXRTMP_VERSION=1.2.2
ARG NODE_VERSION=16.19.0


ENV SRC="/usr/local" \
    LD_LIBRARY_PATH="/usr/local/lib" \
    PKG_CONFIG_PATH="/usr/local/lib/pkgconfig"

RUN apt-get update \
&& apt-get install -y \
pkg-config \
curl \
libtool \
libssl-dev \
zlib1g-dev \
# libasound2-dev \
build-essential \
nasm

RUN apt-get install -y libpcre3-dev

# nasm
# RUN mkdir -p /dist && cd /dist && \
#     curl -OL "https://www.nasm.us/pub/nasm/releasebuilds/${NASM_VERSION}/nasm-${NASM_VERSION}.tar.xz" && \
#     tar -xvJ -f nasm-${NASM_VERSION}.tar.xz && \
#     cd nasm-${NASM_VERSION} && \
#     ./configure && \
#     make -j$(nproc) && \
#     make install

# x264
RUN mkdir -p /dist && cd /dist \
&& curl -OL https://code.videolan.org/videolan/x264/-/archive/stable/x264-stable.tar.bz2 \
&& tar -xvj -f x264-stable.tar.bz2 \
&& cd x264-stable \
&& ./configure --prefix="${SRC}" --bindir="${SRC}/bin" --enable-shared \
&& make -j$(nproc) \
&& make install

# libmp3lame
# RUN mkdir -p /dist && cd /dist && \
#     curl -OL "https://downloads.sourceforge.net/project/lame/lame/${LAME_VERSION}/lame-${LAME_VERSION}.tar.gz" && \
#     tar -xvz -f lame-${LAME_VERSION}.tar.gz && \
#     cd lame-${LAME_VERSION} && \
#     ./configure --prefix="${SRC}" --bindir="${SRC}/bin" --disable-static --enable-nasm && \
#     make -j$(nproc) && \
#     make install

# ffmpeg && patch
# COPY ./contrib/ffmpeg /dist/restreamer/contrib/ffmpeg
# patch -p1 < /dist/restreamer/contrib/ffmpeg/bitrate.patch && \

RUN mkdir -p /dist && cd /dist && \
    curl -OL "https://ffmpeg.org/releases/ffmpeg-${FFMPEG_VERSION}.tar.gz" && \
    tar -xvz -f ffmpeg-${FFMPEG_VERSION}.tar.gz && \
    cd ffmpeg-${FFMPEG_VERSION} && \
    ./configure \
    --bindir="${SRC}/bin" \
    --extra-cflags="-I${SRC}/include" \
    --extra-ldflags="-L${SRC}/lib" \
    --prefix="${SRC}" \
    --enable-nonfree \
    --enable-gpl \
    --enable-version3 \
    # --enable-libmp3lame \
    --enable-libx264 \
    --enable-openssl \
    --enable-postproc \
    # --enable-small \
    # --enable-static \
    # --disable-static \
    # --disable-encoders \
    --disable-alsa \
    --disable-debug \
    --disable-doc \
    # --enable-shared \
    && make -j$(nproc) \
    && make install \
    && rm /usr/local/lib/*.a

# nginx-rtmp
RUN mkdir -p /dist && cd /dist && \
    curl -OL "https://nginx.org/download/nginx-${NGINX_VERSION}.tar.gz" && \
    tar -xvz -f "nginx-${NGINX_VERSION}.tar.gz" && \
    curl -OL "https://github.com/arut/nginx-rtmp-module/archive/v${NGINXRTMP_VERSION}.tar.gz" && \
    tar -xvz -f "v${NGINXRTMP_VERSION}.tar.gz" && \
    sed -i"" -e '/case ESCAPE:/i /* fall through */' nginx-rtmp-module-${NGINXRTMP_VERSION}/ngx_rtmp_eval.c && \
    cd nginx-${NGINX_VERSION} && \
    ./configure --prefix=/usr/local/nginx --with-http_ssl_module --with-http_v2_module --add-module=/dist/nginx-rtmp-module-${NGINXRTMP_VERSION} \
    --without-pcre2 \
    # --with-cc-opt="-I /usr/include" \
    # --with-ld-opt="-L /usr/lib/x86_64-linux-gnu" \
    && make -j$(nproc) \
    && make install

# node.js
RUN mkdir -p /dist && cd /dist \
    && curl -OL "https://nodejs.org/dist/v${NODE_VERSION}/node-v${NODE_VERSION}-linux-x64.tar.xz" \
    && tar -xvJ -f "node-v${NODE_VERSION}-linux-x64.tar.xz" \
    && rm "node-v${NODE_VERSION}-linux-x64.tar.xz" \
    && cd node-v${NODE_VERSION}-linux-x64 \
    && cp -R bin /usr/local \
    && cp -R lib /usr/local

RUN apt-get install --no-install-recommends --no-install-suggests -y \
    # ca-certificates \
    procps \
    # libpcre3 \
    openssl \
    libssl1.1
    # v4l-utils \
    # libv4l-0

COPY . /restreamer

RUN cd /restreamer \
    && npm install -g grunt-cli \
    && npm install \
    && grunt build \
    && npm uninstall -g grunt-cli \
    && npm prune --omit=dev \
    && npm cache verify
    # && apt-get remove -y \
    # curl \
    # && apt autoremove -y \
    # && rm -rf /var/lib/apt/lists/*
    # && npm install --omit=dev \

FROM ${IMAGE}
COPY --from=builder /usr/local/ /usr/local/
# COPY --from=builder /usr/local/bin /usr/local/bin
# COPY --from=builder /usr/local/nginx /usr/local/nginx
# COPY --from=builder /usr/local/lib /usr/local/lib
#COPY --from=builder /usr/local/ /usr/local/
COPY --from=builder /restreamer /restreamer
# COPY --from=builder /dist/node-v16.13.0-linux-x64/bin /usr/local/bin
# COPY --from=builder /dist/node-v16.13.0-linux-x64/lib /usr/local/lib
# COPY --from=builder /dist/node-v16.13.0-linux-x64/ /usr/local/

RUN apt-get update \
&& apt-get --no-install-recommends --no-install-suggests -y install \
# alsa-utils \
# pcre2-utils \
libssl1.1 \
openssl \
&& rm -rf /var/lib/apt/lists/*

# RUN apk add alsa-utils openssl libssl1.1
WORKDIR /restreamer
EXPOSE 8080 8181

# VOLUME ["/restreamer/db"]

CMD ["./run.sh"]
