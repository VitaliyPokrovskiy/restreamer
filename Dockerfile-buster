ARG IMAGE=amd64/debian:buster-slim

FROM $IMAGE as builder

ARG NASM_VERSION=2.14.02
# ARG LAME_VERSION=3.100
ARG FFMPEG_VERSION=4.4.3
# ARG FFMPEG_VERSION=5.1.2
ARG NGINX_VERSION=1.22.1
ARG NGINXRTMP_VERSION=1.2.2


WORKDIR /build
ENV SRC="/usr/local" \
LD_LIBRARY_PATH="/usr/local/lib" \
PKG_CONFIG_PATH="/usr/local/lib/pkgconfig"

RUN apt-get update \
&& apt-get install -y \
build-essential \
curl \
pkg-config \
libpcre3-dev \
libssl-dev \
libtool \
zlib1g-dev \
nasm

# nasm
# RUN mkdir -p /dist && cd /dist && \
#     curl -OL "https://www.nasm.us/pub/nasm/releasebuilds/${NASM_VERSION}/nasm-${NASM_VERSION}.tar.xz" && \
#     tar -xvJ -f nasm-${NASM_VERSION}.tar.xz && \
#     cd nasm-${NASM_VERSION} && \
#     ./configure && \
#     make -j$(nproc) && \
#     make install

# x264
RUN curl -L https://code.videolan.org/videolan/x264/-/archive/stable/x264-stable.tar.bz2 | tar -xvj \
&& cd x264-stable \
&& ./configure --prefix="${SRC}" --bindir="${SRC}/bin" --enable-shared --disable-static \
&& make -j$(nproc) \
&& make install

# libmp3lame
# RUN mkdir -p /dist && cd /dist && \
#     curl -OL "https://downloads.sourceforge.net/project/lame/lame/${LAME_VERSION}/lame-${LAME_VERSION}.tar.gz" && \
#     tar -xvz -f lame-${LAME_VERSION}.tar.gz && \
#     cd lame-${LAME_VERSION} && \
#     ./configure --prefix="${SRC}" --bindir="${SRC}/bin" --disable-static --enable-nasm && \
#     make -j$(nproc) && \
#     make install

# ffmpeg && patch
# COPY ./contrib/ffmpeg /dist/restreamer/contrib/ffmpeg
# patch -p1 < /dist/restreamer/contrib/ffmpeg/bitrate.patch && \

# ARG FFMPEG_VERSION=5.1.2
RUN curl -OL "https://ffmpeg.org/releases/ffmpeg-${FFMPEG_VERSION}.tar.gz" \
&& tar -xvz -f ffmpeg-${FFMPEG_VERSION}.tar.gz \
&& cd ffmpeg-${FFMPEG_VERSION} \
&& ./configure \
--prefix="${SRC}" \
--bindir="${SRC}/bin" \
--extra-cflags="-I${SRC}/include" \
--extra-ldflags="-L${SRC}/lib" \
--enable-nonfree \
--enable-gpl \
# --enable-version3 \
# --enable-libmp3lame \
--enable-libx264 \
--enable-openssl \
--enable-postproc \
--enable-small \
# --enable-static \
# --disable-static \
# --disable-encoders \
# --disable-alsa \
--disable-debug \
--disable-doc \
# --enable-shared \
&& make -j$(nproc) \
&& make install \
&& rm /usr/local/lib/*.a

# nginx-rtmp
RUN curl -OL "https://nginx.org/download/nginx-${NGINX_VERSION}.tar.gz" \
&& tar -xvz -f "nginx-${NGINX_VERSION}.tar.gz" \
&& curl -OL "https://github.com/arut/nginx-rtmp-module/archive/v${NGINXRTMP_VERSION}.tar.gz" \
&& tar -xvz -f "v${NGINXRTMP_VERSION}.tar.gz" \
# && sed -i"" -e '/case ESCAPE:/i /* fall through */' nginx-rtmp-module-${NGINXRTMP_VERSION}/ngx_rtmp_eval.c \
&& cd nginx-${NGINX_VERSION} \
&& ./configure --prefix=${SRC}/nginx --with-http_ssl_module --with-http_v2_module --add-module="../nginx-rtmp-module-${NGINXRTMP_VERSION}" \
--without-pcre2 \
# --with-cc-opt="-I /usr/include" \
# --with-ld-opt="-L /usr/lib/x86_64-linux-gnu" \
&& make -j$(nproc) \
&& make install

# node.js
ARG NODE_VERSION=16.19.1
# ARG NODE_VERSION=17.9.1
RUN curl -OL "https://nodejs.org/dist/v${NODE_VERSION}/node-v${NODE_VERSION}-linux-x64.tar.xz" \
&& tar -xvJ -f "node-v${NODE_VERSION}-linux-x64.tar.xz" \
&& rm "node-v${NODE_VERSION}-linux-x64.tar.xz" \
&& cd node-v${NODE_VERSION}-linux-x64 \
&& cp -R bin ${SRC} \
&& cp -R lib ${SRC}


# COPY . /app
COPY run.sh package.json package-lock.json gruntfile.js /app/
COPY conf /app/conf/
COPY src /app/src/

RUN cd /app \
&& npm config set update-notifier false \
&& npm install -g grunt-cli \
&& npm install \
&& grunt build \
&& npm uninstall -g grunt-cli \
&& npm prune --omit=dev \
# && npm cache verify \
&& npm cache clean --force \
&& rm -rf /usr/local/lib/node_modules/npm
# && npm install --omit=dev \


FROM ${IMAGE}
WORKDIR /app
COPY --from=builder /usr/local/ /usr/local/
COPY --from=builder /app/ /app/
RUN apt-get update && apt-get --no-install-recommends --no-install-suggests -y install\
        ca-certificates openssl procps\
    && rm -rf /var/lib/apt/lists/*

# RUN apk add alsa-utils openssl libssl1.1

EXPOSE 8080 8181
# VOLUME ["/app/db"]
# CMD ["./run.sh"]
ENTRYPOINT [ "node", "./src/start.js" ]
